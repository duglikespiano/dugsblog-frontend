---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import NavModal from "../components/modals/Nav.astro";
import FetchProcessingModal from "../components/modals/FetchProcessing.astro";
import FetchErrorModal from "../components/modals/contact/FetchError.astro";
import MailDelivereModal from "../components/modals/contact/MailDelivered.astro";
import MessageCreatedModal from "../components/modals/guesbook/MessageCreated.astro";
import AskPassword from "../components/modals/guesbook/AskPassword.astro";
import DeleteMessageCompleteModal from "../components/modals/guesbook/DeleteMessageComplete.astro";
import DeleteMessageInvalidPasswordModal from "../components/modals/guesbook/DeleteMessageInvalidPassword.astro";
import MenuButton from "../components/MenuButton.astro";
const { language } = Astro.props;
const whichPage = Astro.url.pathname.split("/")[2];
---

<section
  id="max-width-wrapper"
  class=`text-gray3 font-${language} mx-auto flex min-h-lvh max-w-7xl flex-col justify-between px-5 py-4 duration-1000 opacity-0`
  data-reveal-on-load-delayed="300"
>
  <Header language={language} />
  <section
    id="slot-wrapper"
    class="py-8 opacity-0 duration-1000 md:py-14"
    data-root-wrapper
    data-reveal-on-load-delayed="800"
  >
    <slot />
  </section>
  <Footer language={language} />
  <NavModal language={language} />
  {
    whichPage === "contact" && (
      <>
        <FetchProcessingModal language={language} />
        <MailDelivereModal language={language} />
        <FetchErrorModal language={language} />
      </>
    )
  }
  {
    whichPage === "guestbook" && (
      <>
        <AskPassword language={language} />
        <FetchProcessingModal language={language} />
        <MessageCreatedModal language={language} />
        <FetchErrorModal language={language} />
        <DeleteMessageCompleteModal language={language} />
        <DeleteMessageInvalidPasswordModal language={language} />
      </>
    )
  }

  <MenuButton language={language} />
</section>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const fadeupDelayedElements = document.querySelectorAll("[data-reveal-on-load-delayed]");
    fadeupDelayedElements.forEach((element) => {
      const howLongDelayed = Number(element.getAttribute("data-reveal-on-load-delayed") ?? "0");
      setTimeout(() => {
        element.classList.add("opacity-100");
      }, howLongDelayed);
    });
  });
</script>
