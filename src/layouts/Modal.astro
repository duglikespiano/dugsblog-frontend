---
const { modalName } = Astro.props;
import Hamburger from "../components/Hamburger.astro";
---

<div
  id=`modal-${modalName}`
  data-which-modal={modalName}
  class="[&.active]: pointer-events-none fixed top-0 left-0 z-[-10] flex h-svh w-full items-center justify-center bg-black/90 opacity-0 transition-all duration-200 [&.active]:pointer-events-auto [&.active]:z-10 [&.active]:opacity-100"
  inert
>
  <slot />
  <Hamburger position="fixed" top="top-10" right="right-5" />
</div>

<script>
  import { isModalOpenStore } from "../common/stores";

  const modalElements = document.querySelectorAll(`[data-which-modal]`) as NodeListOf<Element>;

  function fixScrollWhenModalIsOpen(isOpen: boolean) {
    if (isOpen) {
      document.body.style.cssText = `
    position: fixed;
    top: -${window.scrollY}px;
    overflow-y: scroll;
    width: 100%;`;
    } else {
      const scrollY = document.body.style.top;
      document.body.style.cssText = "";
      window.scrollTo(0, parseInt(scrollY || "0", 10) * -1);
    }
  }

  modalElements.forEach((modalElement) => {
    const modal = modalElement as HTMLElement;
    const whichModal = modal.dataset.whichModal as "nav" | "contactForm";

    isModalOpenStore.subscribe((isModalOpen) => {
      const isOpen = isModalOpen[whichModal];
      if (isOpen) {
        modalElement.classList.add("active");
        modalElement.removeAttribute("inert");
        fixScrollWhenModalIsOpen(isOpen);
      } else {
        modalElement.classList.remove("active");
        modalElement.setAttribute("inert", "");
        fixScrollWhenModalIsOpen(isOpen);
      }
    });
  });
</script>
