---
import { getCollection, getEntry, render } from "astro:content";
import RootLayout from "../../../layouts/RootLayout.astro";
import Prose from "../../../layouts/Prose.astro";
import { tags } from "../../../common/types";
import { collectionMap } from "../../../common/types";
import { isStringLanguage, printPageTitle } from "../../../common/functions";
import type { Languages, TagKey, TagTranslations } from "../../../common/types";

const { slug } = Astro.params as { slug: string };
const { language } = Astro.params as { language: Languages };

const posts = await getCollection(`${language}Posts`);
const entry = await getEntry(collectionMap[language], `${slug}/${language}`);

const tagKeys = entry?.data.tags as string[];
const slugsArray = posts.map((post) => post.filePath?.split("/")[2]);
const title = printPageTitle(Astro.url.pathname, language, entry?.data.title);
import "../../../css/particles.scss";

if (!slugsArray.includes(slug)) {
  return Astro.redirect(`/${language}/blog/`);
}

let tagsArray: TagTranslations[] = [];

tagKeys.forEach((tagName) => {
  (Object.keys(tags) as TagKey[]).forEach((tagNameInObject) => {
    if (tags[tagNameInObject][language] === tagName) {
      tagsArray.push(tags[tagNameInObject]);
    }
  });
});

if (!entry) {
  throw new Error("no entry");
}

if (!isStringLanguage(language)) {
  return new Response(null, { status: 404 });
}

const { Content } = await render(entry);
---

<RootLayout title={title}>
  <Prose>
    <div
      class="dark:bg-green1 bg-rosewater dark:border-gray3 border-green2 relative z-10 rounded-4xl border-4 p-5 sm:p-10"
    >
      <h2 class="mt-0">{entry.data.title}</h2>
      <p class="dark:text-gray-400">
        {
          entry.data.pubDate.toLocaleDateString(`${language}`, {
            weekday: "long",
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </p>
      <ul class="flex gap-4 p-0">
        {
          tagsArray.map((tag) => (
            <li class="dark:bg-green1 bg-rosewater flex list-none items-center justify-center pl-0">
              <a
                class="text-green2 dark:text-gray3 dark:border-gray3 border-green2 rounded-xl border-2 p-1"
                href={`/${language}/tags/${tag["en"].toLowerCase()}`}
              >
                {tag[language]}
              </a>
            </li>
          ))
        }
      </ul>
      <Content />
    </div>
  </Prose>
</RootLayout>

<script src="../../../js/particles.js"></script>
