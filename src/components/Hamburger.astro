---
const { position, top, right } = Astro.props;
---

<button
  class=`${position} ${top} ${right} flex h-6 w-8 -translate-y-1/2 cursor-pointer transition-all md:hidden [&.active>div>span:nth-child(1)]:opacity-0 [&.active>div>span:nth-child(2)]:rotate-45 [&.active>div>span:nth-child(3)]:-rotate-45 [&.active>div>span:nth-child(4)]:opacity-0`
  data-hamburger
>
  <div class="relative h-full w-full">
    <span
      class="bg-green2 dark:bg-rosewater [#modal-nav_&]:bg-rosewater absolute top-0 right-0 inline-block h-1 w-full origin-center transition-all duration-200"
    ></span>
    <span
      class="bg-green2 dark:bg-rosewater [#modal-nav_&]:bg-rosewater absolute top-1/2 right-0 inline-block h-1 w-full origin-center -translate-y-1/2 transform transition-all duration-200"
    ></span>
    <span
      class="bg-green2 dark:bg-rosewater [#modal-nav_&]:bg-rosewater absolute top-1/2 right-0 inline-block h-1 w-full origin-center -translate-y-1/2 transform opacity-100 transition-all duration-200"
    ></span>
    <span
      class="bg-green2 dark:bg-rosewater [#modal-nav_&]:bg-rosewater absolute right-0 bottom-0 inline-block h-1 w-full origin-center transition-all duration-200"
    ></span>
  </div>
</button>

<script>
  import { isModalOpenStore } from "../common/stores";
  const hamburgerElements = document.querySelectorAll("[data-hamburger]") as NodeListOf<Element>;

  function toggleModal() {
    isModalOpenStore.set({
      ...isModalOpenStore.get(),
      nav: !isModalOpenStore.get().nav,
    });
  }

  hamburgerElements.forEach((hamburger) => hamburger.addEventListener("click", toggleModal));

  isModalOpenStore.subscribe((isNavOpen) => {
    if (isNavOpen.nav) {
      hamburgerElements.forEach((hamburger) => {
        hamburger.classList.add("active");
      });
    } else {
      hamburgerElements.forEach((hamburger) => hamburger.classList.remove("active"));
    }
  });
</script>
