---
import { Icon } from "astro-icon/components";
import type { Languages } from "../../common/types";
import { main } from "../../common/htmlElements";
const { language } = Astro.props as { language: Languages };
---

<section
  id="profile"
  class="mx-auto w-[270px] justify-center pt-12 sm:w-[300px] md:grid md:w-full md:max-w-[620px] md:grid-cols-2 md:gap-0 md:pt-0 lg:flex lg:max-w-[720px] lg:justify-between lg:gap-10"
>
  <div class="relative w-full cursor-pointer pt-70 sm:px-10 sm:pt-80 md:px-0 md:pt-0" data-images data-image-flipped>
    <img
      class="border-green2 bg-gray3 absolute top-[50%] -left-2 z-10 mx-auto aspect-square w-full -translate-y-[50%] rounded-full border-2 sm:w-[400px] md:left-8 md:max-w-[236px] lg:left-5 lg:max-w-[260px]"
      src="/assets/main/profile/profile.png"
      alt="dug"
      data-dug-image
    />
    <img
      class="border-green2 bg-gray3 absolute top-[50%] -right-2 z-0 mx-auto aspect-square w-full -translate-y-[50%] rounded-full border-2 sm:w-[400px] md:right-8 md:max-w-[236px] lg:right-5 lg:max-w-[260px]"
      src="/assets/main/profile/patrick.png"
      alt="patrick"
      data-patrick-image
    />
  </div>
  <div class="flex flex-col items-center justify-end">
    <p class="mt-5 flex flex-col items-center md:mt-0 md:items-center lg:w-[360px]">
      <span class=`dark:text-gray2 text-green1 mb-2 text-4xl md:mb-3 ${language === 'ja' && "lg:text-3xl" }`
        >{main["hello"][language]}</span
      >
      <span
        class=`dark:text-hotpink text-green2 mb-1 text-4xl font-extrabold text-nowrap ${language === 'ja' ? "lg:text-4xl" : "lg:text-6xl"}`
        >{main["name"][language]}</span
      >
      {
        main["furigana"][language] ? (
          <span class="dark:text-gray4 text-slate-800">{main["furigana"][language]}</span>
        ) : null
      }
      <span class="dark:text-yellow1 text-purple2 mb-1 text-4xl lg:text-4xl">{main["webDeveloper"][language]}</span>
      <span class="dark:text-gray2 mb-2 text-xl text-slate-800 opacity-80 md:mb-4 md:text-2xl"
        >slowly but steadily&nbsp;üê¢</span
      >
    </p>
    <div class="dark:text-gray2 flex text-5xl text-slate-800">
      <a href="https://www.github.com/duglikespiano" target="_blank" class="duration-200 hover:scale-110">
        <Icon name="ph:github-logo-light" />
      </a>
      <a href="https://www.instagram.com/piano_dug" target="_blank" class="duration-200 hover:scale-110">
        <Icon name="ph:instagram-logo-light" />
      </a>
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  const images = document.querySelector("[data-images]");
  const dugImage = document.querySelector("[data-dug-image]");
  const patrickImage = document.querySelector("[data-patrick-image]");
  const dugTimeline = gsap.timeline({ paused: true });
  const patrickTimeline = gsap.timeline({ paused: true });
  dugTimeline
    .to(dugImage, { x: -130 }) //
    .to(dugImage, { zIndex: 0, duration: 0 }) //
    .to(dugImage, { x: 0 }); //
  patrickTimeline
    .to(patrickImage, { x: 130 }) //
    .to(patrickImage, { zIndex: 10, duration: 0 }) //
    .to(patrickImage, { x: 0 }); //

  images?.addEventListener("click", (e) => {
    if (dugTimeline.isActive() || patrickTimeline.isActive()) return false;
    if ((e.currentTarget as HTMLElement).getAttribute("data-image-flipped") === "") {
      (e.currentTarget as HTMLElement).removeAttribute("data-image-flipped");
      dugTimeline.restart();
      patrickTimeline.restart();
    } else {
      (e.currentTarget as HTMLElement).setAttribute("data-image-flipped", "");
      dugTimeline.reverse();
      patrickTimeline.reverse();
    }
  });
</script>
