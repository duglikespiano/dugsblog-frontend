---
import { Image } from "astro:assets";
import { tags } from "../../common/types";
import type { Posts, Languages } from "../../common/types";
import { getTagKeyByTranslation } from "../../common/functions";

const { posts, language, tagsPropsArray } = Astro.props as {
  posts: Posts;
  language: Languages;
  tagsPropsArray?: string[];
};
type TagKey = keyof typeof tags;
const { tag } = Astro.params as { tag: TagKey };
const tagsArray = Object.keys(tags).map((tag, i) => ({ [tag]: Object.values(tags)[i] }));

const highlightedTag = tag ? tags[tag][language] : null;
const filteredPosts = tagsPropsArray
  ? posts.filter((post) => highlightedTag !== null && post.data.tags.includes(highlightedTag))
  : posts;
---

<div class="relative z-10 mx-auto max-w-4xl">
  {tag ? <a href={`/${language}/blog`}>BACK TO ALL POSTS</a> : null}
  <!-- <ul class="flex gap-4">
    {
      tagsArray.map((tag) => {
        const key = Object.keys(tag)[0] as keyof typeof tags;
        return (
          <li>
            <a
              href={`/${language}/tags/${tag[key]["en"].toLowerCase()}`}
              class={`${tag[key][language] === highlightedTag ? "text-red-500" : ""}`}
            >
              {tag[key][language]}
            </a>
          </li>
        );
      })
    }
  </ul> -->
  <ul class="grid items-start gap-4 sm:grid-cols-2">
    {
      filteredPosts.map((post) => (
        <li class="dark:border-gray3 border-green2 dark:bg-green1 bg-rosewater overflow-hidden rounded-2xl border-4">
          <div class="flex h-full flex-col justify-between">
            <a href={`/${language}/blog/${post.filePath?.split("/")[2]}`} class="block">
              <img src={`/src/content/${post.filePath?.split("/")[2]}/thumbnail.jpg`} />
            </a>
            <div class="p-2">
              <ul class="my-1 flex list-none gap-2">
                {post.data.tags.map((t) => {
                  const key = getTagKeyByTranslation(t, language);
                  const href = key ? `/${language}/tags/${tags[key].en.toLowerCase()}` : "#";
                  return (
                    <li
                      class={`dark:border-gray3 dark:text-gray3 border-green2 rounded-xl border-2 p-1 ${t === highlightedTag ? "dark:bg-purple4 text-gray3 bg-pink-800 font-extrabold" : "text-green2"}`}
                    >
                      <a href={href}>{t}</a>
                    </li>
                  );
                })}
              </ul>
              <div class="flex flex-col gap-1">
                <a href={`/${language}/blog/${post.filePath?.split("/")[2]}`} class="block">
                  <div class="dark:text-rosewater text-green1 text-xl font-bold">{post.data.title}</div>
                  <p class="text-sm text-slate-700 dark:text-gray-400">
                    {post.data.pubDate.toLocaleDateString(`${language}`, {
                      weekday: "long",
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </p>
                  <div class="mt-3 line-clamp-2 leading-none text-stone-600 dark:text-gray-300">
                    {post.data.description}
                  </div>
                </a>
              </div>
            </div>
          </div>
        </li>
      ))
    }
  </ul>
</div>
