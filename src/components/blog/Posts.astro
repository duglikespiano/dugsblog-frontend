---
import { tags } from "../../common/types";
import type { Posts, Languages } from "../../common/types";
const { posts, language, tagsPropsArray } = Astro.props as {
  posts: Posts;
  language: Languages;
  tagsPropsArray?: string[];
};
type TagKey = keyof typeof tags;
const { tag } = Astro.params as { tag: TagKey };

const highlightedTag = tag ? tags[tag][language] : null;
const filteredPosts = tagsPropsArray
  ? posts.filter((post) => highlightedTag !== null && post.data.tags.includes(highlightedTag))
  : posts;
---

<div class="mx-auto max-w-4xl px-2">
  <ul class="grid grid-cols-2 gap-4">
    {
      filteredPosts.map((post) => (
        <li class="border-4">
          <a class="flex h-full flex-col justify-between" href={`/${language}/blog/${post.data.slug}`}>
            <div class="border-2">
              <div>{post.data.title}</div>
              <div>{post.body}</div>
            </div>
            <ul class="flex gap-3 border-2 border-red-700">
              {post.data.tags.map((t) => (t === highlightedTag ? <p class="text-red-500">{t}</p> : <p>{t}</p>))}
            </ul>
          </a>
        </li>
      ))
    }
  </ul>
</div>
