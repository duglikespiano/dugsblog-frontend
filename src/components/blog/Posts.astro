---
import { tags } from "../../common/types";
import type { Posts, Languages } from "../../common/types";
import { getTagKeyByTranslation } from "../../common/functions";

const { posts, tagsPropsArray } = Astro.props as {
  posts: Posts;
  tagsPropsArray?: string[];
};

const { language } = Astro.params as { language: Languages };
type TagKey = keyof typeof tags;
const { tag } = Astro.params as { tag: TagKey };

const highlightedTag = tag ? tags[tag][language] : null;
const filteredPosts = tagsPropsArray
  ? posts.filter((post) => highlightedTag !== null && post.data.tags.includes(highlightedTag))
  : posts;
const sortedPosts = filteredPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
---

<ul class="columns-1 gap-6 [column-fill:_balance] sm:columns-2">
  {
    sortedPosts.map((post) => (
      <li class="dark:border-gray3 border-green2 dark:bg-green1 bg-rosewater mb-6 cursor-pointer break-inside-avoid overflow-hidden rounded-2xl border-4 last-of-type:mb-0 md:duration-500 md:hover:scale-103">
        <div class="flex h-full flex-col justify-between">
          <a href={`/${language}/blog/${post.filePath?.split("/")[2]}`} class="block">
            <img src={`/contents/${post.filePath?.split("/")[2]}/thumbnail.jpg`} />
          </a>
          <div class="p-2">
            <div class="flex">
              <ul class="my-1 flex list-none flex-wrap gap-2">
                {post.data.tags.map((t) => {
                  const key = getTagKeyByTranslation(t, language);
                  const href = key ? `/${language}/tags/${tags[key].en.toLowerCase()}` : "#";
                  return (
                    <li>
                      <a
                        class={`dark:border-gray3 dark:text-gray3 border-green2 block rounded-xl border-2 p-1 ${t === highlightedTag ? "dark:bg-purple4 text-gray3 bg-pink-800" : "text-green2"}`}
                        href={href}
                      >
                        {t}
                      </a>
                    </li>
                  );
                })}
              </ul>
            </div>
            <div class="flex flex-col gap-1">
              <a href={`/${language}/blog/${post.filePath?.split("/")[2]}`} class="block">
                <div class="dark:text-rosewater text-green1 text-xl font-bold">{post.data.title}</div>
                <p class="text-sm text-slate-700 dark:text-gray-400">
                  {post.data.pubDate.toLocaleDateString(`${language}`, {
                    weekday: "long",
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </p>
                <div class="mt-3 line-clamp-2 leading-none text-stone-600 dark:text-gray-300">
                  {post.data.description}
                </div>
              </a>
            </div>
          </div>
        </div>
      </li>
    ))
  }
</ul>
