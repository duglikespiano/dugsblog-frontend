---
import { Icon } from "astro-icon/components";
import type { Messages } from "../../common/types";
const response = await fetch("http://localhost:8000/guestbook");
const fetchData = await response.json();
const messages: Messages[] = fetchData.data;
---

<div id="guestbook-list">
  <ul class="flex flex-col gap-y-8 pt-15">
    {
      messages.map((data, i) => (
        <li class="border-green2 dark:border-gray3 rounded-4xl border-4 p-6" data-messages-index={i}>
          <div class="relative flex flex-col gap-4">
            <div class="flex items-center gap-2">
              <p class="text-green1 text-xl font-extrabold dark:text-gray-300">{data.name}</p>
              <p class="text-xs font-bold text-slate-700 opacity-80 dark:text-gray-400">{data.date}</p>
            </div>
            <p class="text-green2 dark:text-rosewater text-lg break-all">{data.message}</p>
            <Icon
              name="cil:trash"
              class="dark:text-gray3 absolute top-0 right-0 h-6 w-6 cursor-pointer text-slate-950"
              data-guestbook-delete-button
              data-messages-delete-index={i}
            />
          </div>
        </li>
      ))
    }
  </ul>
</div>

<script>
  const guestbookDeleteButtons = document.querySelectorAll("[data-guestbook-delete-button]");
  guestbookDeleteButtons.forEach((button) => {
    button.addEventListener("click", (e) => {
      const target = e.target as HTMLElement;
      const messageIndex = target.dataset["messagesDeleteIndex"];
      const itemToHide = document.querySelector(`[data-messages-index="${messageIndex}"]`) as HTMLElement;

      if (itemToHide) {
        itemToHide.style.display = "none";
        // Or use a CSS class: itemToHide.classList.add('hidden');
      }
    });
  });
</script>
