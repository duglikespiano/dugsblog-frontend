---
import Modal from "../../../layouts/Modal.astro";
import { Icon } from "astro-icon/components";
import type { Languages } from "../../../common/types";
import { askPasswordModal } from "../../../common/htmlElements";
const { language } = Astro.props as { language: Languages };
---

<Modal modalName="ask-password">
  <div id="ask-password" class="relative mx-6 flex w-full max-w-[28rem] flex-col gap-4 rounded-4xl border-4 p-5">
    <div class="flex w-full flex-col gap-2">
      <div class="flex flex-col items-center justify-center" data-on-success>
        <p class="mt-4 flex text-2xl" data-ask-password>
          {askPasswordModal[language]["password"]}<Icon name="mdi:password-outline" class="text-yellow2 text-4xl" />
        </p>
      </div>
      <input
        type="text"
        class="bg-gray3 placeholder:te`x`t-sm h-12 w-full rounded-md pl-2 text-slate-950 placeholder-slate-950 placeholder:font-bold placeholder:opacity-50"
        placeholder={askPasswordModal[language]["password"]}
        data-delete-message-password-input
      />
    </div>
    <div class="grid w-full grid-cols-2 gap-4">
      <button
        class="bg-green3 h-12 w-full cursor-pointer rounded-lg text-xl"
        data-delete-message-password-confirm-button>{askPasswordModal[language]["confirm"]}</button
      >
      <button class="bg-rosewater h-12 w-full cursor-pointer rounded-lg text-xl" data-ask-password-modal-close-button
        >{askPasswordModal[language]["cancel"]}</button
      >
    </div>
  </div>
</Modal>

<script>
  import { deleteMessageInvalidPasswordModal } from "../../../common/htmlElements";
  import {
    askPasswordModalStore,
    deleteMessageIdStore,
    guestbookMessagesStore,
    fetchProcessingModalStore,
    deleteMessageCompleteModalStore,
    deleteMessageInvalidPasswordModalStore,
  } from "../../../common/stores";
  const contactCompletModalCloseButton = document.querySelector("[data-ask-password-modal-close-button]");
  const deleteMessagePasswordConfirmButton = document.querySelector("[data-delete-message-password-confirm-button]");

  deleteMessagePasswordConfirmButton?.addEventListener("click", async () => {
    const password = (document.querySelector("[data-delete-message-password-input]") as HTMLInputElement).value;
    const response = await fetch("http://localhost:8000/guestbook", {
      method: "delete",
      headers: {
        "Content-type": "application/json",
      },
      body: JSON.stringify({ messageId: deleteMessageIdStore.get(), password: password }),
    });
    fetchProcessingModalStore.set(true);
    askPasswordModalStore.set(false);
    const result = response.status;
    if (result.toString()[0] === "2") {
      setTimeout(() => {
        guestbookMessagesStore.set(
          guestbookMessagesStore.get().filter((item) => item.id !== deleteMessageIdStore.get()),
        );
        deleteMessageCompleteModalStore.set(true);
        fetchProcessingModalStore.set(false);
      }, 1500);
    } else {
      setTimeout(() => {
        deleteMessageInvalidPasswordModalStore.set(true);
        fetchProcessingModalStore.set(false);
      }, 1500);
    }
  });

  contactCompletModalCloseButton?.addEventListener("click", () => {
    (document.querySelector("[data-delete-message-password-input]") as HTMLInputElement).value = "";
    askPasswordModalStore.set(false);
  });
</script>
