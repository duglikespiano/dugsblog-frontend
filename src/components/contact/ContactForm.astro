---
import FetchingDataModal from "./FetchingDataModal.astro";
---

<div id="contact-form" class="mx-auto max-w-2xl">
  <div class="text-rosewater mb-5 text-5xl font-bold">Contact</div>
  <form
    class="mt-5 flex flex-col flex-wrap rounded-4xl border-4 p-5"
    data-contact-form
  >
    <fieldset class="flex flex-col gap-2 md:gap-4">
      <label class="flex flex-col">
        <p class="text-rosewater mt-2 text-3xl font-bold sm:text-4xl">Name</p>
        <input
          class="contact-input placeholder-green1 placeholder:text-1xl h-12 rounded-md border-4 bg-white pr-4 pl-4 text-gray-800 placeholder:font-bold placeholder:opacity-50"
          type="text"
          id="name"
          name="name"
          maxlength="40"
          placeholder="Your name"
          autocomplete="off"
        />
        <p class="hidden pl-1 leading-none">need to input name</p>
      </label>
      <label class="flex flex-col">
        <p class="text-rosewater mt-2 text-3xl font-bold sm:text-4xl">Email</p>
        <input
          class="contact-input placeholder-green1 placeholder:text-1xl h-12 rounded-md border-4 bg-white pr-4 pl-4 text-gray-800 placeholder:font-bold placeholder:opacity-50"
          type="email"
          id="email"
          name="email"
          maxlength="40"
          placeholder="Your email"
          autocomplete="off"
        />
        <p class="hidden pl-1 leading-none">email error</p>
        <p class="hidden pl-1 leading-none">need to input email</p>
      </label>
      <label class="flex flex-col">
        <p class="text-rosewater mt-2 text-3xl font-bold sm:text-4xl">
          Message
        </p>
        <textarea
          class="contact-input placeholder-green1 placeholder:text-1xl h-40 resize-none rounded-md border-4 bg-white p-4 text-gray-800 placeholder:font-bold placeholder:opacity-50"
          id="message"
          name="message"
          maxlength="3000"
          placeholder="Your Message"></textarea>
        <p class="hidden pl-1 leading-none">need to input message</p>
      </label>
    </fieldset>

    <button
      class="bg-rosewater mx-auto mt-4 flex w-full cursor-pointer flex-col items-center justify-center rounded-md px-18 py-1.5 font-bold md:w-auto"
      type="submit"
      data-contact-form-button
    >
      Submit
    </button>
  </form>
</div>

<FetchingDataModal />

<script>
  const contactForm = document.querySelector(
    "[data-contact-form]",
  ) as HTMLFormElement | null;
  const submitButton = document.querySelector(
    "[data-contact-form-button]",
  ) as HTMLButtonElement | null;

  function isValidEmail(email: string): boolean {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  }

  function showErrors(errors: string[]) {
    const errorDiv = document.getElementById("form-errors");
    if (errorDiv) {
      errorDiv.innerHTML = errors.map((err) => `<p>${err}</p>`).join("");
    }
  }

  function clearErrorsAndStyles() {
    const errorDiv = document.getElementById("form-errors");
    if (errorDiv) {
      errorDiv.innerHTML = "";
    }
    document.querySelectorAll(".contact-input").forEach((input) => {
      (input as HTMLElement).classList.remove("border-red-500");
    });
  }

  function markInvalid(id: string) {
    const el = document.getElementById(id);
    if (el) {
      el.classList.add("border-red-500");
    }
  }

  function disableButton() {
    if (submitButton) {
      submitButton.disabled = true;
      submitButton.classList.add("opacity-50", "cursor-not-allowed");
    }
  }

  function enableButton() {
    if (submitButton) {
      submitButton.disabled = false;
      submitButton.classList.remove("opacity-50", "cursor-not-allowed");
    }
  }

  async function fakeSubmit(data: {
    name: string;
    email: string;
    message: string;
  }) {
    return new Promise((resolve) => setTimeout(resolve, 2000));
  }

  contactForm?.addEventListener("submit", async (event) => {
    event.preventDefault();
  });

  disableButton();
</script>
